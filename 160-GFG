all the codes are done without class few may be - but the matter is 
it is important to learn along with driver code


Day 1 - Second Largest Element
ARRAYS

//
Given an array of positive integers arr[], return the second largest element from the array. If the second largest element doesn't exist then return -1.
Note: The second largest element should not be equal to the largest element.

Examples:
Input: arr[] = [12, 35, 1, 10, 34, 1]
Output: 34
Explanation: The largest element of the array is 35 and the second largest element is 34.
Input: arr[] = [10, 5, 10]
Output: 5
Explanation: The largest element of the array is 10 and the second largest element is 5.
Input: arr[] = [10, 10, 10]
Output: -1
Explanation: The largest element of the array is 10 and the second largest element does not exist.
//

class Solution:
    def getSecondLargest(self, arr):
        # Code Here
        n=len(arr)
        if n<2:
            return -1
        first=second=float('-inf')    
        for num in arr:
             if num > first:
            second=first
            first=num
        else if second=num and first != num:
            second=num   
    if second==float('-inf'):
         return -1
    else:
         return second
            
DAY 2 - Move All Zeros To End
ARRAYS

//You are given an array arr[] of non-negative integers. 
Your task is to move all the zeros in the array to the right end while maintaining 
the relative order of the non-zero elements. The operation must be performed in place, 
meaning you should not use extra space for another array.

Examples:
Input: arr[] = [1, 2, 0, 4, 3, 0, 5, 0]
Output: [1, 2, 4, 3, 5, 0, 0, 0]
Explanation: There are three 0s that are moved to the end.
Input: arr[] = [10, 20, 30]
Output: [10, 20, 30]
Explanation: No change in array as there are no 0s.
Input: arr[] = [0, 0]
Output: [0, 0]
Explanation: No change in array as there are all 0s.//


class Solution:
	def pushZerosToEnd(self,arr):
    	# code here
    	count=0
    	for i in range(len(arr)):
    	    if arr[i]!=0:
    	        arr[i],arr[count]=arr[count],arr[i]
    	        count+=1

if __name__=="__main__":
  arr=[1,2,0,4,3,0,5,0]
  pushZerosToEnd(arr)
  for num in arr():
     print(num,end=" ") 




DAY - 3

//
REVERSE AN ARRAY
//

def reverseArray(arr):
    left,right=0, len(arr)-1
    while left<right:
        arr[left],arr[right]=arr[right],arr[left]
        left+=1
        right-=1
    return arr
arr=[1,2,3,4,5,6]
reverseArray(arr)
print("Reversed Array:")
for i in range(len(arr)):
    print(arr[i],end=" ")




DAY - 4

//
Rotate an array
//

1st approch - Juggling algorithm




2nd approch - reversal alogorithm

def rotate(arr,d):
    n=len(arr)
    d%=n
    
    reverse(arr,0,d-1)
    reverse(arr,d,n-1)
    reverse(arr,0,n-1)
    
def reverse(arr,start,end):
    while start<end:
        arr[start],arr[end]=arr[end],arr[start]
        start+=1
        end-=1
        
arr=[1,2,3,4,5,6]
rotate(arr,3)
print(arr)
